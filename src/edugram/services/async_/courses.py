# This file was generated by liblab | https://liblab.com/

from typing import Awaitable, List
from .utils.to_async import to_async
from ..courses import CoursesService
from ...models import Course, StudentDataOUt, AssignmentDataOUt


class CoursesServiceAsync(CoursesService):
    """
    Async Wrapper for CoursesServiceAsync
    """

    def add_course_courses_new_post(self, request_body: Course) -> Awaitable[any]:
        return to_async(super().add_course_courses_new_post)(request_body)

    def add_courses_courses_new_many_post(
        self, request_body: List[Course]
    ) -> Awaitable[any]:
        return to_async(super().add_courses_courses_new_many_post)(request_body)

    def get_by_id_courses_id_get(self, id_: str) -> Awaitable[Course]:
        return to_async(super().get_by_id_courses_id_get)(id_)

    def get_students_data_courses_course_id_students_get(
        self, course_id: str
    ) -> Awaitable[List[StudentDataOUt]]:
        return to_async(super().get_students_data_courses_course_id_students_get)(
            course_id
        )

    def get_students_data_courses_course_id_assignments_get(
        self, course_id: str
    ) -> Awaitable[List[AssignmentDataOUt]]:
        return to_async(super().get_students_data_courses_course_id_assignments_get)(
            course_id
        )

    def add_student_update_data_courses_student_post(
        self, course_id: str, student_id: str
    ) -> Awaitable[any]:
        return to_async(super().add_student_update_data_courses_student_post)(
            course_id, student_id
        )

    def add_assignment_courses_assignment_post(
        self, course_id: str, assignment_id: str
    ) -> Awaitable[any]:
        return to_async(super().add_assignment_courses_assignment_post)(
            course_id, assignment_id
        )

    def add_lesson_courses_lesson_post(
        self, course_id: str, lesson_id: str
    ) -> Awaitable[any]:
        return to_async(super().add_lesson_courses_lesson_post)(course_id, lesson_id)

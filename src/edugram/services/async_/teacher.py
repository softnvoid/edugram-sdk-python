# This file was generated by liblab | https://liblab.com/

from typing import Awaitable, List
from .utils.to_async import to_async
from ..teacher import TeacherService
from ...models import Teacher, CoursesSchemaOut, AssignmentSchemaOut


class TeacherServiceAsync(TeacherService):
    """
    Async Wrapper for TeacherServiceAsync
    """

    def add_teacher_teacher_new_post(self, request_body: Teacher) -> Awaitable[any]:
        return to_async(super().add_teacher_teacher_new_post)(request_body)

    def get_courses_data_by_tg_id_teacher_tg_tg_id_courses_get(
        self, tg_id: str
    ) -> Awaitable[List[CoursesSchemaOut]]:
        return to_async(super().get_courses_data_by_tg_id_teacher_tg_tg_id_courses_get)(
            tg_id
        )

    def get_by_id_teacher_id_id_get(self, id_: str) -> Awaitable[Teacher]:
        return to_async(super().get_by_id_teacher_id_id_get)(id_)

    def get_ready_assignments_teacher_courses_course_id_assignments_ready_get(
        self, course_id: str
    ) -> Awaitable[List[AssignmentSchemaOut]]:
        return to_async(
            super().get_ready_assignments_teacher_courses_course_id_assignments_ready_get
        )(course_id)
